{"version":3,"sources":["js/buttons.js","index.js"],"names":["Buttons","input","useRef","useState","final","setFinal","num","setNum","show","setShow","lastSymbol","setLastSymbol","lastPow","setLastPow","getValue","symbol","kind","prevNum","prevFinal","console","log","total","substr","length","current","value","parseFloat","className","id","ref","isNaN","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad40d292.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nfunction Buttons() {\r\n    const input = useRef();\r\n    const [final, setFinal] = useState(\"\");\r\n    let [num, setNum] = useState(\"\");\r\n    let [show, setShow] = useState(false);\r\n    let [lastSymbol, setLastSymbol] = useState(\"\");\r\n    let [lastPow, setLastPow] = useState(\"\");\r\n\r\n    function getValue(symbol, kind) {\r\n        if (kind === \"num\") {\r\n            if (!show) {\r\n                setFinal((prevFinal) => (prevFinal += symbol));\r\n            } else {\r\n                setNum((prevNum) => (prevNum += symbol));\r\n            }\r\n        } else if (kind === \"opr\") {\r\n            if (num !== \"\") {\r\n                if (symbol === \"+\") {\r\n                    setLastSymbol(() => (lastSymbol = \"+\"));\r\n                } else if (symbol === \"-\") {\r\n                    setLastSymbol(() => (lastSymbol = \"-\"));\r\n                } else if (symbol === \"*\") {\r\n                    setLastSymbol(() => (lastSymbol = \"*\"));\r\n                } else if (symbol === \"/\") {\r\n                    setLastSymbol(() => (lastSymbol = \"/\"));\r\n                } else if (symbol === \"=\") {\r\n                    setShow(() => (show = false));\r\n                    // setLastSymbol(() => \"\");\r\n                }\r\n                console.log(\"hi\");\r\n                total(lastSymbol);\r\n                setNum(() => (num = \"\"));\r\n                setLastPow(() => (lastPow = \"\"));\r\n            } else if (num === \"\" && final !== \"\") {\r\n                if (symbol === \"+\") {\r\n                    setLastSymbol(() => (lastSymbol = \"+\"));\r\n                } else if (symbol === \"-\") {\r\n                    setLastSymbol(() => (lastSymbol = \"-\"));\r\n                } else if (symbol === \"*\") {\r\n                    setLastSymbol(() => (lastSymbol = \"*\"));\r\n                } else if (symbol === \"/\") {\r\n                    setLastSymbol(() => (lastSymbol = \"/\"));\r\n                } else if (symbol === \"=\") {\r\n                    console.log(\"cant press\");\r\n                }\r\n                setNum(() => (num = \"\"));\r\n                setShow(() => (show = true));\r\n                setLastPow(() => (lastPow = \"\"));\r\n            } else if (final === \"\" || lastSymbol !== \"\") {\r\n                if (symbol === \"+\") {\r\n                    console.log(\"cant press\");\r\n                } else if (symbol === \"-\") {\r\n                    console.log(\"cant press\");\r\n                } else if (symbol === \"*\") {\r\n                    console.log(\"cant press\");\r\n                } else if (symbol === \"/\") {\r\n                    console.log(\"cant press\");\r\n                } else if (symbol === \"=\") {\r\n                    console.log(\"cant press\");\r\n                }\r\n            }\r\n        } else if (kind === \"com\") {\r\n            if (symbol === \"c\") {\r\n                setFinal(() => \"\");\r\n                setNum(() => \"\");\r\n                setLastSymbol(() => \"\");\r\n                setLastPow(() => \"\");\r\n            } else if (symbol === \"del\") {\r\n                if (!show) {\r\n                    setFinal(() =>\r\n                        input.current.value.substr(\r\n                            0,\r\n                            input.current.value.length - 1\r\n                        )\r\n                    );\r\n                } else if (show) {\r\n                    setNum((prevNum) => prevNum.substr(0, num.length - 1));\r\n                } else {\r\n                    console.log(\"cant press\");\r\n                }\r\n            }\r\n        } else if (kind === \"pow\") {\r\n            if (final !== \"\" && num === \"\" && lastSymbol === \"\") {\r\n                if (symbol === \"%\" && symbol !== lastPow) {\r\n                    total(\"%\");\r\n                    setLastPow(() => (lastPow = \"%\"));\r\n                } else if (\r\n                    symbol === \".\" &&\r\n                    symbol !== lastPow &&\r\n                    lastPow !== \"%\"\r\n                ) {\r\n                    setFinal((prevFinal) => (prevFinal += symbol));\r\n                    setLastPow(() => (lastPow = \".\"));\r\n                } else if (symbol === \"+/-\") {\r\n                    total(\"+/-\");\r\n                } else {\r\n                    console.log(\"cant press\");\r\n                }\r\n            } else if (num !== \"\") {\r\n                if (symbol === \"%\" && symbol !== lastPow) {\r\n                    total(\"%\");\r\n                    setLastPow(() => (lastPow = \"%\"));\r\n                } else if (\r\n                    symbol === \".\" &&\r\n                    symbol !== lastPow &&\r\n                    lastPow !== \"%\"\r\n                ) {\r\n                    if (show) {\r\n                        setFinal((prevFinal) => (prevFinal += symbol));\r\n                    } else {\r\n                        setNum((prevNum) => (prevNum += symbol));\r\n                    }\r\n                    setLastPow(() => (lastPow = \".\"));\r\n                } else if (symbol === \"+/-\") {\r\n                    total(\"+/-\");\r\n                } else {\r\n                    console.log(\"cant press\");\r\n                }\r\n            } else if (final === \"\" || num === \"\") {\r\n                if (symbol === \".\" && symbol !== lastPow && lastPow !== \"%\") {\r\n                    if (final === \"\") {\r\n                        setFinal((prevFinal) => (prevFinal += symbol));\r\n                    } else if (num === \"\") {\r\n                        setNum((prevNum) => (prevNum += symbol));\r\n                    }\r\n                    setLastPow(() => (lastPow = \".\"));\r\n                }\r\n            } else {\r\n                console.log(\"cant press\");\r\n            }\r\n        }\r\n    }\r\n    function total(symbol) {\r\n        switch (symbol) {\r\n            case \"+\":\r\n                setFinal(\r\n                    (prevFinal) =>\r\n                        (prevFinal =\r\n                            parseFloat(input.current.value) +\r\n                            parseFloat(prevFinal))\r\n                );\r\n                console.log(input.current.value);\r\n                break;\r\n\r\n            case \"-\":\r\n                setFinal(\r\n                    (prevFinal) =>\r\n                        (prevFinal =\r\n                            parseFloat(prevFinal) -\r\n                            parseFloat(input.current.value))\r\n                );\r\n                break;\r\n\r\n            case \"*\":\r\n                setFinal(\r\n                    (prevFinal) =>\r\n                        (prevFinal =\r\n                            parseFloat(input.current.value) *\r\n                            parseFloat(prevFinal))\r\n                );\r\n                break;\r\n\r\n            case \"/\":\r\n                setFinal(\r\n                    (prevFinal) =>\r\n                        (prevFinal =\r\n                            parseFloat(prevFinal) /\r\n                            parseFloat(input.current.value))\r\n                );\r\n                break;\r\n\r\n            case \"%\":\r\n                if (lastSymbol === \"\") {\r\n                    setFinal(\r\n                        () =>\r\n                            (input.current.value =\r\n                                parseFloat(input.current.value) / 100)\r\n                    );\r\n                } else {\r\n                    setNum(\r\n                        () =>\r\n                            (input.current.value =\r\n                                parseFloat(input.current.value) / 100)\r\n                    );\r\n                }\r\n                break;\r\n\r\n            case \"+/-\":\r\n                if (lastSymbol === \"\") {\r\n                    setFinal(\r\n                        (prevFinal) =>\r\n                            (prevFinal = parseFloat(input.current.value) * -1)\r\n                    );\r\n                } else {\r\n                    setNum(\r\n                        (prevNum) =>\r\n                            (prevNum = parseFloat(input.current.value) * -1)\r\n                    );\r\n                }\r\n                break;\r\n\r\n            default:\r\n                setFinal((prevFinal) => prevFinal);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {console.log(final)}\r\n            <div className=\"input\">\r\n                <input id=\"num\" ref={input} value={show ? num : final} />\r\n                <label className=\"answer\">\r\n                    {final !== \"\" && !isNaN(final)\r\n                        ? `= ${final}`\r\n                        : final === \"\"\r\n                        ? \"\"\r\n                        : \"undefined\"}\r\n                </label>\r\n            </div>\r\n            <div className=\"btn-container\">\r\n                <form id=\"btn-value\">\r\n                    <button type=\"button\" onClick={() => getValue(\"c\", \"com\")}>\r\n                        C\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => getValue(\"del\", \"com\")}\r\n                    >\r\n                        del\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"%\", \"pow\")}>\r\n                        %\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"/\", \"opr\")}>\r\n                        /\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"7\", \"num\")}>\r\n                        7\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"8\", \"num\")}>\r\n                        8\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"9\", \"num\")}>\r\n                        9\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"*\", \"opr\")}>\r\n                        *\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"4\", \"num\")}>\r\n                        4\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"5\", \"num\")}>\r\n                        5\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"6\", \"num\")}>\r\n                        6\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"-\", \"opr\")}>\r\n                        -\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"1\", \"num\")}>\r\n                        1\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"2\", \"num\")}>\r\n                        2\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"3\", \"num\")}>\r\n                        3\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"+\", \"opr\")}>\r\n                        +\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => getValue(\"+/-\", \"pow\")}\r\n                    >\r\n                        +/-\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"0\", \"num\")}>\r\n                        0\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\".\", \"pow\")}>\r\n                        .\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => getValue(\"=\", \"opr\")}>\r\n                        =\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\n\nimport Buttons from \"./js/buttons.js\";\n\nReactDOM.render(\n    <div>\n        <Buttons />\n    </div>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}